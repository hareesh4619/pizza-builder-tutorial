{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H5I\\\\Documents\\\\GitHub\\\\pizza-builder-tutorial\\\\src\\\\components\\\\chatbot\\\\CustomChatbot.js\";\nimport React, { Component } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport Review from '../chatbot/Review ';\n\nclass CustomChatbot extends Component {\n  render() {\n    return React.createElement(ChatBot, {\n      steps: [{\n        id: '1',\n        message: 'What is your name?',\n        trigger: 'name'\n      }, {\n        id: 'name',\n        user: true,\n        trigger: '3'\n      }, {\n        id: '3',\n        message: 'Hi {previousValue}! What is your gender?',\n        trigger: 'gender'\n      }, {\n        id: 'gender',\n        options: [{\n          value: 'male',\n          label: 'Male',\n          trigger: '5'\n        }, {\n          value: 'female',\n          label: 'Female',\n          trigger: '5'\n        }]\n      }, {\n        id: '5',\n        message: 'How old are you?',\n        trigger: 'age'\n      }, {\n        id: 'age',\n        user: true,\n        trigger: '7',\n        validator: value => {\n          if (isNaN(value)) {\n            return 'value must be a number';\n          } else if (value < 0) {\n            return 'value must be positive';\n          } else if (value > 120) {\n            return \"\".concat(value, \"? Come on!\");\n          }\n\n          return true;\n        }\n      }, {\n        id: '7',\n        message: 'Great! Check out your summary',\n        trigger: 'review'\n      }, {\n        id: 'review',\n        component: React.createElement(Review, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        asMessage: true,\n        trigger: 'update'\n      }, {\n        id: 'update',\n        message: 'Would you like to update some field?',\n        trigger: 'update-question'\n      }, {\n        id: 'update-question',\n        options: [{\n          value: 'yes',\n          label: 'Yes',\n          trigger: 'update-yes'\n        }, {\n          value: 'no',\n          label: 'No',\n          trigger: 'end-message'\n        }]\n      }, {\n        id: 'update-yes',\n        message: 'What field would you like to update?',\n        trigger: 'update-fields'\n      }, {\n        id: 'update-fields',\n        options: [{\n          value: 'name',\n          label: 'Name',\n          trigger: 'update-name'\n        }, {\n          value: 'gender',\n          label: 'Gender',\n          trigger: 'update-gender'\n        }, {\n          value: 'age',\n          label: 'Age',\n          trigger: 'update-age'\n        }]\n      }, {\n        id: 'update-name',\n        update: 'name',\n        trigger: '7'\n      }, {\n        id: 'update-gender',\n        update: 'gender',\n        trigger: '7'\n      }, {\n        id: 'update-age',\n        update: 'age',\n        trigger: '7'\n      }, {\n        id: 'end-message',\n        message: 'Thanks! Your data was submitted successfully!',\n        end: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CustomChatbot;","map":{"version":3,"sources":["C:\\Users\\H5I\\Documents\\GitHub\\pizza-builder-tutorial\\src\\components\\chatbot\\CustomChatbot.js"],"names":["React","Component","ChatBot","Review","CustomChatbot","render","id","message","trigger","user","options","value","label","validator","isNaN","component","asMessage","update","end"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ChatBot from 'react-simple-chatbot';\r\nimport Review from '../chatbot/Review ';\r\n\r\nclass CustomChatbot extends Component {\r\n    render() {\r\n      return (\r\n        <ChatBot\r\n          steps={[\r\n            {\r\n              id: '1',\r\n              message: 'What is your name?',\r\n              trigger: 'name',\r\n            },\r\n            {\r\n              id: 'name',\r\n              user: true,\r\n              trigger: '3',\r\n            },\r\n            {\r\n              id: '3',\r\n              message: 'Hi {previousValue}! What is your gender?',\r\n              trigger: 'gender',\r\n            },\r\n            {\r\n              id: 'gender',\r\n              options: [\r\n                { value: 'male', label: 'Male', trigger: '5' },\r\n                { value: 'female', label: 'Female', trigger: '5' },\r\n              ],\r\n            },\r\n            {\r\n              id: '5',\r\n              message: 'How old are you?',\r\n              trigger: 'age',\r\n            },\r\n            {\r\n              id: 'age',\r\n              user: true,\r\n              trigger: '7',\r\n              validator: (value) => {\r\n                if (isNaN(value)) {\r\n                  return 'value must be a number';\r\n                } else if (value < 0) {\r\n                  return 'value must be positive';\r\n                } else if (value > 120) {\r\n                  return `${value}? Come on!`;\r\n                }\r\n  \r\n                return true;\r\n              },\r\n            },\r\n            {\r\n              id: '7',\r\n              message: 'Great! Check out your summary',\r\n              trigger: 'review',\r\n            },\r\n            {\r\n              id: 'review',\r\n              component: <Review />,\r\n              asMessage: true,\r\n              trigger: 'update',\r\n            },\r\n            {\r\n              id: 'update',\r\n              message: 'Would you like to update some field?',\r\n              trigger: 'update-question',\r\n            },\r\n            {\r\n              id: 'update-question',\r\n              options: [\r\n                { value: 'yes', label: 'Yes', trigger: 'update-yes' },\r\n                { value: 'no', label: 'No', trigger: 'end-message' },\r\n              ],\r\n            },\r\n            {\r\n              id: 'update-yes',\r\n              message: 'What field would you like to update?',\r\n              trigger: 'update-fields',\r\n            },\r\n            {\r\n              id: 'update-fields',\r\n              options: [\r\n                { value: 'name', label: 'Name', trigger: 'update-name' },\r\n                { value: 'gender', label: 'Gender', trigger: 'update-gender' },\r\n                { value: 'age', label: 'Age', trigger: 'update-age' },\r\n              ],\r\n            },\r\n            {\r\n              id: 'update-name',\r\n              update: 'name',\r\n              trigger: '7',\r\n            },\r\n            {\r\n              id: 'update-gender',\r\n              update: 'gender',\r\n              trigger: '7',\r\n            },\r\n            {\r\n              id: 'update-age',\r\n              update: 'age',\r\n              trigger: '7',\r\n            },\r\n            {\r\n              id: 'end-message',\r\n              message: 'Thanks! Your data was submitted successfully!',\r\n              end: true,\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default CustomChatbot;"]},"metadata":{},"sourceType":"module"}