{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H5I\\\\Documents\\\\GitHub\\\\pizza-builder-tutorial\\\\src\\\\components\\\\chatbot\\\\CustomChatbot.js\";\nimport React from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport Review from './Review';\n\nfunction CustomChatbot(props) {\n  const config = {\n    width: \"300px\",\n    height: \"400px\",\n    floating: true\n  };\n  return React.createElement(ChatBot, {\n    steps: [{\n      id: '1',\n      message: 'What is your name?',\n      trigger: 'name'\n    }, {\n      id: 'name',\n      user: true,\n      trigger: '3'\n    }, {\n      id: '3',\n      message: 'Hi {previousValue}! What is your gender?',\n      trigger: 'gender'\n    }, {\n      id: 'gender',\n      options: [{\n        value: 'male',\n        label: 'Male',\n        trigger: '5'\n      }, {\n        value: 'female',\n        label: 'Female',\n        trigger: '5'\n      }]\n    }, {\n      id: '5',\n      message: 'How old are you?',\n      trigger: 'age'\n    }, {\n      id: 'age',\n      user: true,\n      trigger: '7',\n      validator: value => {\n        if (isNaN(value)) {\n          return 'value must be a number';\n        } else if (value < 0) {\n          return 'value must be positive';\n        } else if (value > 120) {\n          return \"\".concat(value, \"? Come on!\");\n        }\n\n        return true;\n      }\n    }, {\n      id: '7',\n      message: 'Great! Check out your summary',\n      trigger: 'review'\n    }, {\n      id: 'review',\n      component: React.createElement(Review, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      asMessage: true,\n      trigger: 'update'\n    }, {\n      id: 'update',\n      message: 'Would you like to update some field?',\n      trigger: 'update-question'\n    }, {\n      id: 'update-question',\n      options: [{\n        value: 'yes',\n        label: 'Yes',\n        trigger: 'update-yes'\n      }, {\n        value: 'no',\n        label: 'No',\n        trigger: 'end-message'\n      }]\n    }, {\n      id: 'update-yes',\n      message: 'What field would you like to update?',\n      trigger: 'update-fields'\n    }, {\n      id: 'update-fields',\n      options: [{\n        value: 'name',\n        label: 'Name',\n        trigger: 'update-name'\n      }, {\n        value: 'gender',\n        label: 'Gender',\n        trigger: 'update-gender'\n      }, {\n        value: 'age',\n        label: 'Age',\n        trigger: 'update-age'\n      }]\n    }, {\n      id: 'update-name',\n      update: 'name',\n      trigger: '7'\n    }, {\n      id: 'update-gender',\n      update: 'gender',\n      trigger: '7'\n    }, {\n      id: 'update-age',\n      update: 'age',\n      trigger: '7'\n    }, {\n      id: 'end-message',\n      message: 'Thanks! Your data was submitted successfully!',\n      end: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n  return React.createElement(ChatBot, Object.assign({\n    steps: steps\n  }, config, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n}\n\nexport default CustomChatbot;","map":{"version":3,"sources":["C:\\Users\\H5I\\Documents\\GitHub\\pizza-builder-tutorial\\src\\components\\chatbot\\CustomChatbot.js"],"names":["React","ChatBot","Review","CustomChatbot","props","config","width","height","floating","id","message","trigger","user","options","value","label","validator","isNaN","component","asMessage","update","end","steps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport Review from './Review';\r\nfunction CustomChatbot(props) {\r\n  const config = {\r\n    width: \"300px\",\r\n    height: \"400px\",\r\n    floating: true\r\n  };\r\n  \r\n    return (\r\n      <ChatBot\r\n        steps={[\r\n          {\r\n            id: '1',\r\n            message: 'What is your name?',\r\n            trigger: 'name',\r\n          },\r\n          {\r\n            id: 'name',\r\n            user: true,\r\n            trigger: '3',\r\n          },\r\n          {\r\n            id: '3',\r\n            message: 'Hi {previousValue}! What is your gender?',\r\n            trigger: 'gender',\r\n          },\r\n          {\r\n            id: 'gender',\r\n            options: [\r\n              { value: 'male', label: 'Male', trigger: '5' },\r\n              { value: 'female', label: 'Female', trigger: '5' },\r\n            ],\r\n          },\r\n          {\r\n            id: '5',\r\n            message: 'How old are you?',\r\n            trigger: 'age',\r\n          },\r\n          {\r\n            id: 'age',\r\n            user: true,\r\n            trigger: '7',\r\n            validator: (value) => {\r\n              if (isNaN(value)) {\r\n                return 'value must be a number';\r\n              } else if (value < 0) {\r\n                return 'value must be positive';\r\n              } else if (value > 120) {\r\n                return `${value}? Come on!`;\r\n              }\r\n\r\n              return true;\r\n            },\r\n          },\r\n          {\r\n            id: '7',\r\n            message: 'Great! Check out your summary',\r\n            trigger: 'review',\r\n          },\r\n          {\r\n            id: 'review',\r\n            component: <Review />,\r\n            asMessage: true,\r\n            trigger: 'update',\r\n          },\r\n          {\r\n            id: 'update',\r\n            message: 'Would you like to update some field?',\r\n            trigger: 'update-question',\r\n          },\r\n          {\r\n            id: 'update-question',\r\n            options: [\r\n              { value: 'yes', label: 'Yes', trigger: 'update-yes' },\r\n              { value: 'no', label: 'No', trigger: 'end-message' },\r\n            ],\r\n          },\r\n          {\r\n            id: 'update-yes',\r\n            message: 'What field would you like to update?',\r\n            trigger: 'update-fields',\r\n          },\r\n          {\r\n            id: 'update-fields',\r\n            options: [\r\n              { value: 'name', label: 'Name', trigger: 'update-name' },\r\n              { value: 'gender', label: 'Gender', trigger: 'update-gender' },\r\n              { value: 'age', label: 'Age', trigger: 'update-age' },\r\n            ],\r\n          },\r\n          {\r\n            id: 'update-name',\r\n            update: 'name',\r\n            trigger: '7',\r\n          },\r\n          {\r\n            id: 'update-gender',\r\n            update: 'gender',\r\n            trigger: '7',\r\n          },\r\n          {\r\n            id: 'update-age',\r\n            update: 'age',\r\n            trigger: '7',\r\n          },\r\n          {\r\n            id: 'end-message',\r\n            message: 'Thanks! Your data was submitted successfully!',\r\n            end: true,\r\n          },\r\n        ]}\r\n      />\r\n    );\r\n  \r\n    return <ChatBot steps={steps} {...config} />;\r\n}\r\nexport default CustomChatbot;"]},"metadata":{},"sourceType":"module"}